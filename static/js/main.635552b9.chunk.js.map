{"version":3,"sources":["component/card/card.component.jsx","component/card-list/cardlist.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","onSearchChange","App","event","setState","searchField","target","value","state","fetch","then","res","json","users","this","filterMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCDbC,G,MAAU,SAAAR,GAEvB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNVO,G,MAAY,SAAAX,GAAK,OAC5B,uBACEC,UAAU,aACVW,KAAK,SACLC,YAAY,kBACZC,SAAUd,EAAMe,mBC6CLC,E,kDA9Cb,aAAc,IAAD,8BACX,gBAOFD,eAAiB,SAAAE,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAPxC,EAAKC,MAAO,CACVb,SAAS,GACTU,YAAY,IAJL,E,gEAYQ,IAAD,OAClBI,MAAM,6CACLC,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,+BAGhC,IAAD,EACwBC,KAAKN,MAA7Bb,EADA,EACAA,SAAUU,EADV,EACUA,YAGZU,EAAgBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC3CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAalD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWc,eAAgBa,KAAKb,iBAChC,cAAC,EAAD,CAAUN,SAAUoB,W,GAzCRI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.635552b9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nimport './cardlist.style.css';\r\n\r\nexport const CardList= props => {\r\n\r\nreturn <div className='card-list'>\r\n    {props.monsters.map(monster => (\r\n    <Card key={monster.id} monster={monster}/>\r\n    ))}\r\n</div>;\r\n\r\n}","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = props => (\r\n  <input\r\n    className='search-box'\r\n    type='search'\r\n    placeholder='search monsters'\r\n    onChange={props.onSearchChange}\r\n  />\r\n);","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport { CardList } from './component/card-list/cardlist.component';\nimport { SearchBox } from './component/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n      this.state ={\n        monsters:[ ],\n        searchField:''\n      };\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then( res => res.json())\n    .then(users => this.setState({monsters:users}))  \n}\n\n render() {\n   const {monsters, searchField} =this.state;\n  //  const monsters= this.state.monsters;\n  //  const searchField= this.state.serachField;\n  const filterMonster = monsters.filter(monster =>\n    monster.name.toLowerCase().includes(searchField.toLowerCase()));\n  \n  //   return (\n  //   <div className=\"App\">\n  //     <h1>Monsters Rolodex</h1>\n  //     <input type='serach'\n  //      placeholder='Search' \n  //      onChange={ e => this.setState({serachField: e.target.value})} />\n      \n  //     <CardList monsters={filterMonster}>\n  //     </CardList>\n  //   </div>\n  // );\n  return (\n    <div className='App'>\n      <h1>Monsters Rolodex</h1>\n      <SearchBox onSearchChange={this.onSearchChange} />\n      <CardList monsters={filterMonster} />\n    </div>\n  );\n}\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}